// Assertion.js
// Assertion р╕Бр╕ер╕▓р╕Зр╕Чр╕╡р╣Ир╣Гр╕Кр╣Йр╣Гр╕Щр╕лр╕ер╕▓р╕в test case

const Selector = require('./Selector');

module.exports = {
  LOGIN_SUCCESS_TEXT: 'р╣Ар╕Вр╣Йр╕▓р╕гр╕░р╕Ър╕Ър╕Хр╕▒р╣Йр╕Зр╣Бр╕Хр╣И',
  USER_LOGIN_SINCE_ID: '#user-loginSince',
  // р╣Ар╕Юр╕┤р╣Ир╕б assertion р╕нр╕╖р╣Ир╕Щ р╣Ж р╣Др╕Фр╣Йр╕Чр╕╡р╣Ир╕Щр╕╡р╣И
  // Assertion utilities р╕кр╕│р╕лр╕гр╕▒р╕Ъ test script
  assertDetailFound: ($els, cy) => {
    let found = false;
    $els.each((i, el) => {
      const txt = Cypress.$(el).text().trim();
      if (txt && (txt.includes('р╕гр╕▓р╕вр╕ер╕░р╣Ар╕нр╕╡р╕вр╕Ф') || txt.includes('Detail'))) {
        cy.log(`тЬЕ р╕Юр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕гр╕▓р╕вр╕ер╕░р╣Ар╕нр╕╡р╕вр╕Ф: ${txt.substring(0, 100)}`);
        found = true;
      }
    });
    if (!found) {
      cy.log('тЭМ р╣Др╕бр╣Ир╕Юр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕гр╕▓р╕вр╕ер╕░р╣Ар╕нр╕╡р╕вр╕Фр╣Гр╕Щ div р╕лр╕гр╕╖р╕н table');
    }
  },
  assertToolbarResult: ($spans, cy) => {
    let logText = '';
    $spans.each((i, el) => {
      logText += el.innerText + ' ';
    });
    logText = logText.trim();
    if (logText.match(/р╣Бр╕кр╕Фр╕З.*р╕Ир╕▓р╕Бр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф.*р╕гр╕▓р╕вр╕Бр╕▓р╕г/)) {
      cy.log('ЁЯФО р╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣Мр╕Др╣Йр╕Щр╕лр╕▓: ' + logText);
    } else {
      cy.log('тЪая╕П р╣Др╕бр╣Ир╕Юр╕Ър╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣Мр╕Др╣Йр╕Щр╕лр╕▓р╣Гр╕Щ Toolbar-Message');
    }
  }
};
